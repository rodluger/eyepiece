#!/usr/bin/python
# -*- coding: utf-8 -*-
'''
transits.py
-----------

Inspect transits generated by :py:func:``Inspect()``.

.. todo::
   - Interactive transit plotting and outlier removal
   - Fix ``PlotTransits`` routine
   
'''

from __future__ import (division, print_function, absolute_import,
                        unicode_literals)
import eyepiece.config as config
from .download import GetData, GetInfo
from .utils import RowCol
import matplotlib.pyplot as pl
import numpy as np
import os
import itertools

__all__ = ['PlotFolded', 'PlotTransits']

def PlotFolded(koi = 17.01, blind = False, minsz = 8, datadir = config.datadir):
  '''
  
  '''
  
  data = GetData(koi, data_type = 'trn', blind = blind)
  tN, per, tdur, hash = GetInfo(koi)
  
  fig = pl.figure()
  
  for q, quarter in data.items():
    for time, fsum, ferr in zip(quarter['time'], quarter['fsum'], quarter['ferr']):

      left = np.argmax(time > time[len(time) / 2] - tdur)
      right = np.argmax(time > time[len(time) / 2] + tdur)
      
      if left > minsz and right < len(time) - minsz:
        t = np.append(time[:left], time[right:])
        f = np.append(fsum[:left], fsum[right:])
      else:
        continue

      a, b, c = np.polyfit(t, f, 2)
      model = a * time ** 2 + b * time + c 
      pl.plot(time % per, fsum / model, 'k.', alpha = 0.1)
  
  pl.xlabel('Time (days)', fontsize = 22)
  pl.ylabel('Flux', fontsize = 22)

  figname = os.path.join(datadir, str(koi), "folded.png")
  fig.savefig(figname, bbox_inches = 'tight')
  print("Saved to file %s." % figname)
  pl.close()
  
def PlotTransits(koi = 17.01, quarters = range(18), datadir = config.datadir, ttvs = False):
  '''
  
  '''
  
  raise Exception("Not yet working!")
  
  time = []
  flux = []
  
  try:
    data = np.load(os.path.join(datadir, str(koi), 'data_trn.npz'))['data']
    foo = np.load(os.path.join(datadir, str(koi), 'transits.npz'))
    tN = foo['tN']
    per = foo['per']
    tdur = foo['tdur']
  except IOError:
    raise Exception("You must download and process the data first! Try using ``Inspect()``.")
  
  for q in quarters:
    for t, f in zip(data[q]['time'], data[q]['fsum']):
      time.append(t)
      flux.append(f)
    
  COLS, ROWS = RowCol(len(time))
  grid = list(itertools.product(*[np.arange(COLS), np.arange(ROWS)]))  
  fig, axes = pl.subplots(COLS, ROWS, figsize = (2.5*ROWS,2.5*COLS))
  fig.subplots_adjust(wspace=0.05, hspace=0.05)
  if (COLS*ROWS) > len(time):
    for g in grid[len(time):]:
      axes[g].set_visible(False)
  for i, _ in enumerate(time):
  
    # What transit number is this?
    tnum = np.argmin(np.abs(tN - time[i][0]))
    tNi = tN[tnum]

    if (COLS > 1):
      ax = axes[grid[i]]
    else:
      ax = axes[grid[i][1]]

    ax.plot(time[i], flux[i], 'b.')
    ax.plot(time[i], flux[i], 'b-', alpha = 0.25)
    ax.annotate("%03d" % tnum,
            xy=(0.8, 0.05), xycoords='axes fraction',
            xytext=(0, 0), textcoords='offset points')
    ax.axvline(tNi, color = 'r', ls = '-', alpha = 0.75)
    ax.set_xlim(tNi - tdur / 2., tNi + tdur / 2.)
    ax.get_xaxis().set_ticks([])
    ax.get_yaxis().set_ticks([])
  
  figname = os.path.join(datadir, str(koi), "transits.png")
  fig.savefig(figname, bbox_inches = 'tight')
  print("Saved to file %s." % figname)
  pl.close()